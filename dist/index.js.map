{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["export default class PickText {\n  constructor(element) {\n    if (typeof element == 'string') {\n      this.element = document.querySelector(element);\n    } else {\n      this.element = element;\n    }\n  }\n\n  get isInput() {\n    let tag = this.element.tagName.toLowerCase();\n    return tag == 'input' || tag == 'textarea';\n  }\n\n  run(options = {}) {\n    this.select();\n    if (options.copy) this.copy();\n  }\n\n  select() {\n    if (this.isInput) {\n      this.selectInput();\n    } else {\n      this.selectRange();\n    }\n  }\n\n  selectInput() {\n    let readonly = this.element.readOnly;\n    this.element.readOnly = false;\n    this.element.select();\n    this.element.readOnly = readonly;\n  }\n\n  selectRange() {\n    let range = document.createRange();\n    range.selectNodeContents(this.element);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  copy() {\n    if (this.isInput) {\n      this.copyInput();\n    } else {\n      this.copyRange();\n    }\n  }\n\n  copyInput() {\n    let text = this.element.value.substring(this.element.selectionStart, this.element.selectionEnd);\n    this.copyToClipboard(text);\n  }\n\n  copyRange() {\n    let text = window.getSelection().toString();\n    this.copyToClipboard(text);\n  }\n\n  copyToClipboard(text) {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(text);\n    } else {\n      document.execCommand(\"copy\");\n    }\n  }\n\n  static run(element, options = {}) {\n    if (options.copy == undefined) options.copy = true;\n    new PickText(element).run(options);\n  }\n}\n"],"names":["PickText","constructor","element","this","document","querySelector","isInput","tag","tagName","toLowerCase","run","options","select","copy","selectInput","selectRange","readonly","readOnly","range","createRange","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","copyInput","copyRange","text","value","substring","selectionStart","selectionEnd","copyToClipboard","toString","navigator","clipboard","writeText","execCommand","undefined"],"mappings":"MAAqBA,EACnBC,WAAAA,CAAYC,GAERC,KAAKD,QADe,iBAAXA,EACME,SAASC,cAAcH,GAEvBA,CAEnB,CAEA,WAAII,GACF,IAAIC,EAAMJ,KAAKD,QAAQM,QAAQC,cAC/B,MAAc,SAAPF,GAAyB,YAAPA,CAC3B,CAEAG,GAAAA,CAAIC,QAAO,IAAPA,IAAAA,EAAU,CAAA,GACZR,KAAKS,SACDD,EAAQE,MAAMV,KAAKU,MACzB,CAEAD,MAAAA,GACMT,KAAKG,QACPH,KAAKW,cAELX,KAAKY,aAET,CAEAD,WAAAA,GACE,IAAIE,EAAWb,KAAKD,QAAQe,SAC5Bd,KAAKD,QAAQe,UAAW,EACxBd,KAAKD,QAAQU,SACbT,KAAKD,QAAQe,SAAWD,CAC1B,CAEAD,WAAAA,GACE,IAAIG,EAAQd,SAASe,cACrBD,EAAME,mBAAmBjB,KAAKD,SAE9B,IAAImB,EAAYC,OAAOC,eACvBF,EAAUG,kBACVH,EAAUI,SAASP,EACrB,CAEAL,IAAAA,GACMV,KAAKG,QACPH,KAAKuB,YAELvB,KAAKwB,WAET,CAEAD,SAAAA,GACE,IAAIE,EAAOzB,KAAKD,QAAQ2B,MAAMC,UAAU3B,KAAKD,QAAQ6B,eAAgB5B,KAAKD,QAAQ8B,cAClF7B,KAAK8B,gBAAgBL,EACvB,CAEAD,SAAAA,GACE,IAAIC,EAAON,OAAOC,eAAeW,WACjC/B,KAAK8B,gBAAgBL,EACvB,CAEAK,eAAAA,CAAgBL,GACVO,UAAUC,UACZD,UAAUC,UAAUC,UAAUT,GAE9BxB,SAASkC,YAAY,OAEzB,CAEA,UAAO5B,CAAIR,EAASS,YAAAA,IAAAA,EAAU,CAAE,GACV4B,MAAhB5B,EAAQE,OAAmBF,EAAQE,MAAO,GAC9C,IAAIb,EAASE,GAASQ,IAAIC,EAC5B"}